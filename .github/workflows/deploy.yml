name: Deploy WasmJs App to GitHub Pages and Netlify

on:
  # Triggers the workflow on pushes to the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Grant GITHUB_TOKEN the necessary permissions
permissions:
  contents: read      # Required to fetch the repository content
  pages: write        # Required to deploy to GitHub Pages
  id-token: write     # Required for OIDC authentication by actions/deploy-pages

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4

      # Set up JDK 21 (Recommended for modern Kotlin/Compose projects)
      - name: ⚙️ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Set up Gradle for caching and permissions
      - name: ⚙️ Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      # Grant execution permission to the gradlew script
      - name: 🔒 Change Gradle Wrapper Permissions
        run: chmod +x gradlew

      # Build the WasmJs App using the same command as your Netlify config
      - name: 🛠️ Build WasmJS App
        # Note: We use :composeApp:wasmJsBrowserDistribution assuming 'composeApp' is your module name.
        run: ./gradlew :composeApp:wasmJsBrowserDistribution

      # --- GitHub Pages Deployment Steps ---
      - name: 📄 Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: 📤 Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This path MUST match the `publish` directory
          path: 'composeApp/build/dist/wasmJs/productionExecutable'

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # --- Netlify Deployment Artifact ---
      - name: 📦 Upload Netlify artifact
        uses: actions/upload-artifact@v4
        with:
          name: netlify-artifact
          path: 'composeApp/build/dist/wasmJs/productionExecutable'
          # Set retention low since it's used immediately
          retention-days: 1

  deploy-to-netlify:
    # This job runs only after the build-and-deploy job succeeds
    needs: build-and-deploy
    runs-on: ubuntu-latest

    # Set secrets as environment variables for the Netlify action
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    steps:
      - name: 📥 Download Netlify artifact
        uses: actions/download-artifact@v4
        with:
          name: netlify-artifact
          # Downloads the artifact into this temp directory
          path: './netlify-deploy-dist'

      - name: 🚀 Deploy to Netlify
        uses: netlify/actions/cli@master
        with:
          # The artifact contents are located inside a subdirectory named after the artifact
          args: deploy --dir=./netlify-deploy-dist/netlify-artifact --prod
